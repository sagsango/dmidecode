------------------------------------------------------------------------
This project reads thease virtual-files or /dev/mem - memory reads the
DMI table and prints it. That's it.
------------------------------------------------------------------------
/dev/mem
/dev/misc/mem
/dev/xsvc

/sys/devices/virtual/dmi/id
/sys/firmware/dmi/tables/smbios_entry_point
/sys/firmware/dmi/tables/DMI
/sys/firmware/dmi/tables
/sys/firmware/efi/systab

/proc/efi/systab
------------------------------------------------------------------------
#01:
/proc/efi/systab: provides a live snapshot of the firmware's EFI
System Table as parsed by the kernel during boot.

#02:
- get that piece of hardware data from these virtual files
$ ls /sys/devices/virtual/dmi/id/
bios_date     chassis_asset_tag  chassis_version  product_name    product_version
bios_release  chassis_serial     modalias         product_serial  subsystem
bios_vendor   chassis_type       power            product_sku     sys_vendor
bios_version  chassis_vendor     product_family   product_uuid    uevent

#03:
This file is the SMBIOS entry point structure, a small binary blob
at the start of the SMBIOS data dump (offset 0x00) containing key metadata:
It includes the physical address of the SMBIOS table (at offsetâ€¯0x20)
Also stores the total size of the DMI table and the SMBIOS version.
/sys/firmware/dmi/tables/smbios_entry_point

#04:
raw binary DMI (SMBIOS) table
 /sys/firmware/dmi/tables/DMI
